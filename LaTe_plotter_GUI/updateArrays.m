function [Xarr,Yarr,Yarrdelta_p,Yarrdelta_m] = updateArrays(Xarr,Yarr,Yarrdelta_p,Yarrdelta_m,csvData,index,int_idx)
% updateArrays: this function is used to update the arrays in the
% LaTe_plotter GUI, given a structure generated by csvreadadvanced(). 
% If an element (i.e. (X,Y,Ydeltap,Ydeltam) corresponding to a certain
% value in Xarr already exists, the existing one is replaced with the new
% one. The returned arrays are sorted according to Xarr.

    % If the current element already exists, replace it (i.e. update
	% the point in the plot)
	find_idx=find(Xarr==csvData.PayloadLen_B(index));
    
    % Resolve field names from int_idx
    if(find(int_idx==1)==1)
        plusname='ConfInt90plus';
        minusname='ConfInt90';
    elseif(find(int_idx==1)==2)
        plusname='ConfInt95plus';
        minusname='ConfInt95';
    else
        plusname='ConfInt99plus';
        minusname='ConfInt99';
    end
    
    % Update the arrays
	if(~isempty(find_idx))
        Yarr(find_idx)=csvData.AvgLatency_ms(index);
        Xarr(find_idx)=csvData.PayloadLen_B(index);
        Yarrdelta_p(find_idx)=csvData.(plusname)(index)-csvData.AvgLatency_ms(index);
        Yarrdelta_m(find_idx)=csvData.AvgLatency_ms(index)-csvData.(minusname)(index);
	else
        Yarr=[Yarr csvData.AvgLatency_ms(index)];
        Xarr=[Xarr csvData.PayloadLen_B(index)];
        Yarrdelta_p=[Yarrdelta_p csvData.(plusname)(index)-csvData.AvgLatency_ms(index)];
        Yarrdelta_m=[Yarrdelta_m csvData.AvgLatency_ms(index)-csvData.(minusname)(index)];
	end
    
    % Sort the arrays
    [Xarr,sort_idx]=sort(Xarr);
    Yarr=Yarr(sort_idx);
    Yarrdelta_p=Yarrdelta_p(sort_idx);
    Yarrdelta_m=Yarrdelta_m(sort_idx);
end

